tools_env = host_env.Clone()
add_flags(tools_env, CFLAGS=['-D__LINUX__', '-m32'])
add_flags(tools_env, LINKFLAGS=['-D__LINUX__', '-m32'])

#boot_sign = Tool('mkvect', 'mkvect.c', usage='$TOOLPATH $TARGET', env=tools_env)
#boot2_verify = Tool('mkvect', 'mkvect.c', usage='$TOOLPATH $TARGET', env=tools_env)

imager_env = tools_env.Clone()
add_include_path(imager_env, '#include')

# TODO: Make a cleaner way of exporting CROSS_LD through scons ENV
boot_imager = Tool('boot-imager', 'boot-imager.c', usage='CROSS_LD='+CROSS_LD+' $TOOLPATH $SOURCES -o $TARGET', env=imager_env)

cdisk_usage = '$TOOLPATH --part1={kconfig.FS_START},{kconfig.FS_DD_COUNT},{kconfig.FS_TYPE},EXT2 -s {kconfig.DISK_SZ}, '
'-l 512 -b {BOOT_STAGE1_IMG} --stage-2={BOOT_STAGE2_IMG},1,{kconfig.BOOT_STAGE2_SECTORS}, $TARGET'.format(
kconfig=kconfig, BOOT_STAGE1_IMG='${SOURCES[0]}', BOOT_STAGE2_IMG='${SOURCES[1]}')

Tool('cdisk', 'cdisk.c', usage=cdisk_usage, env=imager_env)


#./tools/bin/cdisk --part1=$(FS_START),$(FS_DD_COUNT),$(FS_TYPE),EXT2 -s $(DISK_SZ) -l 512 -b kernel/arch/$(BUILD_ARCH)/boot/boot-stage1.img --stage-2=kernel/arch/           $(BUILD_ARCH)/boot/boot-stage2.img,1,$(BOOT_STAGE2_SECTORS) ./chronos.img
